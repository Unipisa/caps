#!/bin/bash

set -e

# Make sure that CAPS_DB_DRIVER is lower-case, as it is
# case-insensitive in our documentation.
CAPS_DB_DRIVER=$(echo ${CAPS_DB_DRIVER} | tr '[:upper:]' '[:lower:]')

function msg {
  echo -e "\033[32;1mCAPS::DOCKER\033[34;0m $* \033[0m"
}

export HOME=/var/www

msg "Starting the CAPS Docker manager"

msg "Adjust permissions of directory /app/logs"
chown www-data:www-data /app/logs -R

msg "Making sure that /tmp is 777"
chmod 777 /tmp

if [ "${CAPS_DB_DRIVER}" = "postgres" ]; then
  # Wait for Postgres
  while ! pg_isready --host ${CAPS_DB_HOST} --dbname ${CAPS_DB_DATABASE}; do
    msg "Waiting for Postgres server ${CAPS_DB_HOST} to be ready ..."
    sleep 2
  done
fi 

if [ "${CAPS_DB_DRIVER}" = "mysql" ]; then
  # ... or for Mysql, depending on the user choice
  while ! php -r "try { new PDO(\"mysql:host=${CAPS_DB_HOST};dbname=${CAPS_DB_DATABASE}\", \"${CAPS_DB_USERNAME}\", \"${CAPS_DB_PASSWORD}\"); } catch (PDOException \$e) { exit(1); } exit(0);"; do
    msg "Waiting for MySQL ${CAPS_DB_HOST} to be ready ... "
    sleep 5
  done

  # We check for MySQL twice, because it could get the temporary server sometimes,
  # and we need to make sure that the complete server is up and running before
  # doing migrations.
  sleep 5

  while ! php -r "try { new PDO(\"mysql:host=${CAPS_DB_HOST};dbname=${CAPS_DB_DATABASE}\", \"${CAPS_DB_USERNAME}\", \"${CAPS_DB_PASSWORD}\"); } catch (PDOException \$e) { exit(1); } exit(0);"; do 
    msg "Waiting for MySQL ${CAPS_DB_HOST} to be ready ... "
    sleep 5
  done
fi


if [ "$CAPS_SSH_TUNNEL" != "" ]; then
  msg "Starting the SSH tunnel"

  if [ ! -f /app/id_rsa ]; then
    msg "Please make sure to mount your public SSH key as /app/id_rsa.pub"
    exit 2
  fi

  # Make sure we're the one to own the key
  cp /app/id_rsa /app/id_rsa.key
  chown $(whoami) /app/id_rsa.key
  chmod 600 /app/id_rsa.key

  /app/ssh-tunnel-wrapper.sh ${CAPS_SSH_TUNNEL} /app/id_rsa.key ${CAPS_LDAP_URI} &

  msg "We are rewriting the configuration to point to the local forward:"
  msg ${CAPS_LDAP_URI} | grep ldaps: > /dev/null
  if [ $? -eq 0 ]; then
    CAPS_LDAP_URI="ldaps://localhost:1636"
  else
    CAPS_LDAP_URI="ldap://localhost:1636"
  fi

  msg "New CAPS_LDAP_URI: ${CAPS_LDAP_URI}"
  msg "Disabling certificate verification, as it cannot be guaranteed in this setting"
  CAPS_VERIFY_CERT="false"
  export CAPS_LDAP_URI
  export CAPS_VERIFY_CERT
fi

msg " -> SMTP server: ${SMTP_HOST}:${SMTP_PORT}"

msg "Generating security salt"
export SECURITY_SALT=$(openssl rand -hex 32)

export APACHE_PID_FILE=/var/run/apache2/apache2.pid
export APACHE_RUN_DIR=/var/run/apache2
export APACHE_RUN_USER=www-data
export APACHE_RUN_GROUP=www-data
export APACHE_LOG_DIR=/var/log/apache2

if [ ! -L /var/www/html ]; then
  msg "Setting up /var/www/html as a symbolic link to /app/webroot"
  rm -r /var/www/html
  ln -s /app/webroot /var/www/html
fi

# msg "Dumping configuration"
# cat /app/config/app.php

msg "Running migrations"
bin/cake migrations migrate

msg "Clearing cache"
bin/cake cache clear_all

msg "Enabling mod_rewrite"
a2enmod rewrite

if [ "$DEBUG" = "true" ]; then
  msg "CAPS is starting in debug mode"
  PORT=":8765"
fi

msg ""
msg "************************************************"
msg "************************************************"
msg "Starting Apache2, go to http://localhost${PORT}/"

if [ "$DEBUG" = "true" ]; then

  msg ""
  if [ "$CAPS_ADMIN" = "" ] ; then
      msg "Run sudo docker exec -it caps /app/bin/cake grant-admin USER to make"
      msg "USER an administrator"
  else
      msg "Admins defined in environment configuration: ${CAPS_ADMIN}" 
  fi
      
  msg "If you started the development server with the default caps.env, "
  msg "you may login using user / user or admin / admin as credentials."
fi
msg "************************************************"
msg "************************************************"
msg ""

apache2 -DFOREGROUND || exit 0
